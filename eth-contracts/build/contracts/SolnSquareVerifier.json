{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "setPaused",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        },
        {
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "verifierAddress",
          "type": "address"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "AddedSolution",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ownerShipTransfered",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"},{\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"verifierAddress\",\"type\":\"address\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"AddedSolution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ownerShipTransfered\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/alano/Development/Repository/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/alano/Development/Repository/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0xd10619a0e8e4eba15b6a57dfb66290e09b373ebfe146e187451c7d334b109824\",\"urls\":[\"bzzr://d6ffaa70b576c47ce03ce5b33979b2d584a363392d1b1a5eba6e0700c67d09e7\"]},\"/home/alano/Development/Repository/Blockchain-Capstone/eth-contracts/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzzr://f48ebdff8df1cabbd7749c5eb818a6c54a6ba92956a850736bdcfbc9f53f9ffd\"]},\"/home/alano/Development/Repository/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x430da1494979c29b145376d68ec301fb5c6ab8afec9c4130fb1594d255842eb0\",\"urls\":[\"bzzr://a35ed3a83b12a74532ca522c18c06a91b637a2d42a681b4732ecffd21d6e114a\"]},\"/home/alano/Development/Repository/Blockchain-Capstone/zokrates/code/square/verifier.sol\":{\"keccak256\":\"0x535459ec140310b7d5c6de027f292e90f25844a0137df9b15f31ab88e81607d5\",\"urls\":[\"bzzr://eecc650ae0c9ae0084b91c3de8c0754166313cb4ae615430b18858e3d1b3e784\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5eb69360d3441ab2ee799bd7c007cccbffb0896f12b2dfe1456193e2aa180a11\",\"urls\":[\"bzzr://ecd0352164978c418c8f5b0080c972b65e4b07f6afc593fb7cdd856185a458ea\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xadbfb7028fb0f851dc848a48b9e54e7c89ffd2c2edc12fa4ba9bb383dfaa83d9\",\"urls\":[\"bzzr://2466b6491600969dd9ffdeb0b705e7cecc38418aa215cec64b2481273bba9076\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzzr://f7f6da60a184233fd666ac44e6fb2bd51ca6ebdc4867a310d368049aa4e62786\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600581526020017f54657374650000000000000000000000000000000000000000000000000000008152506013908051906020019062000051929190620003fa565b503480156200005f57600080fd5b5060405162002f9738038062002f97833981018060405260608110156200008557600080fd5b81019080805190602001909291908051640100000000811115620000a857600080fd5b82810190506020810184811115620000bf57600080fd5b8151856001820283011164010000000082111715620000dd57600080fd5b50509291906020018051640100000000811115620000fa57600080fd5b828101905060208101848111156200011157600080fd5b81518560018202830111640100000000821117156200012f57600080fd5b50509291905050508181818160138054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620001d55780601f10620001a957610100808354040283529160200191620001d5565b820191906000526020600020905b815481529060010190602001808311620001b757829003601f168201915b5050505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f097505f2321a0d6f95f8a9d1fc668f0988247ea0fde8b50bd0516c8da54599af60405160405180910390a160008060146101000a81548160ff021916908315150217905550620002786301ffc9a760e01b6200035a60201b60201c565b620002906380ac58cd60e01b6200035a60201b60201c565b620002a863780e9d6360e01b6200035a60201b60201c565b82600f9080519060200190620002c0929190620003fa565b508160109080519060200190620002d9929190620003fa565b508060119080519060200190620002f2929190620003fa565b506200030b635b5e139f60e01b6200035a60201b60201c565b505050505082601460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050620004a9565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156200038e57600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200043d57805160ff19168380011785556200046e565b828001600101855582156200046e579182015b828111156200046d57825182559160200191906001019062000450565b5b5090506200047d919062000481565b5090565b620004a691905b80821115620004a257600081600090555060010162000488565b5090565b90565b612ade80620004b96000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806342842e0e116100c3578063a22cb4651161007c578063a22cb465146108cd578063b88d4fde1461091d578063c87b56dd14610a22578063d547cfb714610ac9578063e985e9c514610b4c578063f2fde38b14610bc857610158565b806342842e0e1461068a5780634f6ccce7146106f85780636352211e1461073a57806370a08231146107a8578063893d20e81461080057806395d89b411461084a57610158565b806323b872dd1161011557806323b872dd1461032957806327dc297e146103975780632f745c591461045c57806337a66d85146104be57806338bbfa50146104c857806340c10f191461062457610158565b806301ffc9a71461015d57806306fdde03146101c2578063081812fc14610245578063095ea7b3146102b35780631249c58b1461030157806318160ddd1461030b575b600080fd5b6101a86004803603602081101561017357600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610c0c565b604051808215151515815260200191505060405180910390f35b6101ca610c74565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561020a5780820151818401526020810190506101ef565b50505050905090810190601f1680156102375780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102716004803603602081101561025b57600080fd5b8101908080359060200190929190505050610d16565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102ff600480360360408110156102c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d67565b005b610309610fa5565b005b610313610fa7565b6040518082815260200191505060405180910390f35b6103956004803603606081101561033f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fb4565b005b61045a600480360360408110156103ad57600080fd5b8101908080359060200190929190803590602001906401000000008111156103d457600080fd5b8201836020820111156103e657600080fd5b8035906020019184600183028401116401000000008311171561040857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610fd7565b005b6104a86004803603604081101561047257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061101a565b6040518082815260200191505060405180910390f35b6104c661108d565b005b610622600480360360608110156104de57600080fd5b81019080803590602001909291908035906020019064010000000081111561050557600080fd5b82018360208201111561051757600080fd5b8035906020019184600183028401116401000000008311171561053957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561059c57600080fd5b8201836020820111156105ae57600080fd5b803590602001918460018302840111640100000000831117156105d057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611136565b005b6106706004803603604081101561063a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061113b565b604051808215151515815260200191505060405180910390f35b6106f6600480360360608110156106a057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111e5565b005b6107246004803603602081101561070e57600080fd5b8101908080359060200190929190505050611205565b6040518082815260200191505060405180910390f35b6107666004803603602081101561075057600080fd5b8101908080359060200190929190505050611239565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107ea600480360360208110156107be57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611276565b6040518082815260200191505060405180910390f35b6108086112c6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108526112ef565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610892578082015181840152602081019050610877565b50505050905090810190601f1680156108bf5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61091b600480360360408110156108e357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611391565b005b610a206004803603608081101561093357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561099a57600080fd5b8201836020820111156109ac57600080fd5b803590602001918460018302840111640100000000831117156109ce57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506114cb565b005b610a4e60048036036020811015610a3857600080fd5b81019080803590602001909291905050506114f1565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a8e578082015181840152602081019050610a73565b50505050905090810190601f168015610abb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610ad16115b8565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b11578082015181840152602081019050610af6565b50505050905090810190601f168015610b3e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610bae60048036036040811015610b6257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061165a565b604051808215151515815260200191505060405180910390f35b610c0a60048036036020811015610bde57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116ee565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d0c5780601f10610ce157610100808354040283529160200191610d0c565b820191906000526020600020905b815481529060010190602001808311610cef57829003601f168201915b5050505050905090565b6000610d21826117d8565b15610d61576003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610d62565b5b919050565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180612a0e6029913960400191505060405180910390fd5b6000610e296112c6565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e6b5750610e6a813361165a565b5b610ec0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806129c86021913960400191505060405180910390fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff166002600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b565b6000600880549050905090565b610fbe338261184a565b610fc757600080fd5b610fd28383836118df565b505050565b611016828260006040519080825280601f01601f1916602001820160405280156110105781602001600182028038833980820191505090505b50611136565b5050565b600061102583611276565b821061103057600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061107a57fe5b9060005260206000200154905092915050565b336000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611133576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612a376028913960400191505060405180910390fd5b50565b505050565b60003373ffffffffffffffffffffffffffffffffffffffff1661115c6112c6565b73ffffffffffffffffffffffffffffffffffffffff16146111c8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526033815260200180612a5f6033913960400191505060405180910390fd5b6111d28383611903565b6111db82611924565b6001905092915050565b611200838383604051806020016040528060008152506114cb565b505050565b600061120f610fa7565b821061121a57600080fd5b6008828154811061122757fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006112bf600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611a7b565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113875780601f1061135c57610100808354040283529160200191611387565b820191906000526020600020905b81548152906001019060200180831161136a57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113ca57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6114d6848484610fb4565b6114e284848484611a89565b6114eb57600080fd5b50505050565b60606114fc826117d8565b61150557600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115ac5780601f10611581576101008083540402835291602001916115ac565b820191906000526020600020905b81548152906001019060200180831161158f57829003601f168201915b50505050509050919050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116505780601f1061162557610100808354040283529160200191611650565b820191906000526020600020905b81548152906001019060200180831161163357829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b336000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611794576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612a376028913960400191505060405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008061185683611239565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806118c557508373ffffffffffffffffffffffffffffffffffffffff166118ad84610d16565b73ffffffffffffffffffffffffffffffffffffffff16145b806118d657506118d5818561165a565b5b91505092915050565b6118ea838383611c72565b6118f48382611f25565b6118fe82826120c3565b505050565b61190d828261218a565b61191782826120c3565b611920816123a2565b5050565b61192d816117d8565b61199f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f546f6b656e20646f6573206e6f7420657869740000000000000000000000000081525060200191505060405180910390fd5b6060611a4d60118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a3a5780601f10611a0f57610100808354040283529160200191611a3a565b820191906000526020600020905b815481529060010190602001808311611a1d57829003601f168201915b5050505050611a48846123ee565b61251b565b905080601260008481526020019081526020016000209080519060200190611a769291906128f6565b505050565b600081600001549050919050565b6000611aaa8473ffffffffffffffffffffffffffffffffffffffff1661255f565b611ab75760019050611c6a565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611b92578082015181840152602081019050611b77565b50505050905090810190601f168015611bbf5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015611be157600080fd5b505af1158015611bf5573d6000803e3d6000fd5b505050506040513d6020811015611c0b57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611d29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612a926021913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611daf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806129e96025913960400191505060405180910390fd5b6003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055611e2c600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612572565b611e73600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612588565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611f7d6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506125ab90919063ffffffff16565b905060006007600084815260200190815260200160002054905081811461206a576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611fea57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061204257fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036120bc9190612976565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b612193816117d8565b15612206576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f546f6b656e20616c72656164792065786973742e00000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156122a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420616464726573732e0000000000000000000000000000000081525060200191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612342600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612572565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415612436576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612516565b600082905060005b60008214612460578080600101915050600a828161245857fe5b04915061243e565b6060816040519080825280601f01601f1916602001820160405280156124955781602001600182028038833980820191505090505b50905060006001830390505b6000861461250e57600a86816124b357fe5b0660300160f81b828280600190039350815181106124cd57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161250657fe5b0495506124a1565b819450505050505b919050565b60606125578383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612634565b905092915050565b600080823b905060008111915050919050565b6001816000016000828254019250508190555050565b6125a0600182600001546125ab90919063ffffffff16565b816000018190555050565b600082821115612623576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156126905781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612715578881815181106126bc57fe5b602001015160f81c60f81b8383806001019450815181106126d957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506126a7565b600090505b87518110156127885787818151811061272f57fe5b602001015160f81c60f81b83838060010194508151811061274c57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061271a565b600090505b86518110156127fb578681815181106127a257fe5b602001015160f81c60f81b8383806001019450815181106127bf57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061278d565b600090505b855181101561286e5785818151811061281557fe5b602001015160f81c60f81b83838060010194508151811061283257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612800565b600090505b84518110156128e15784818151811061288857fe5b602001015160f81c60f81b8383806001019450815181106128a557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612873565b82995050505050505050505095945050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061293757805160ff1916838001178555612965565b82800160010185558215612965579182015b82811115612964578251825591602001919060010190612949565b5b50905061297291906129a2565b5090565b81548183558181111561299d5781836000526020600020918201910161299c91906129a2565b5b505050565b6129c491905b808211156129c05760008160009055506001016129a8565b5090565b9056fe4d657373656e6765722073656e646572207761736e607420617070726f7665642e43616e6e6f74207472616e7366657220746f206120696e76616c696420616464726573732e4769766520616464726573732063616e6e6f7420626520746865206f776e657220616464726573732e5065726d697373696f6e2044656e6965642e204f6e6c79206f776e657220697320616c6c6f77656443616e6e6f742062652065786563757465642e206d73672e73656e646572206973206e6f74206f776e6572206164647265737346726f6d206973206e6f74206f776e6572206f6620676976656e20746f6b656e2ea165627a7a7230582055bb5f40f2937355d2714c02b1118613d65cd00a39cb06baebc860071fbe96100029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101585760003560e01c806342842e0e116100c3578063a22cb4651161007c578063a22cb465146108cd578063b88d4fde1461091d578063c87b56dd14610a22578063d547cfb714610ac9578063e985e9c514610b4c578063f2fde38b14610bc857610158565b806342842e0e1461068a5780634f6ccce7146106f85780636352211e1461073a57806370a08231146107a8578063893d20e81461080057806395d89b411461084a57610158565b806323b872dd1161011557806323b872dd1461032957806327dc297e146103975780632f745c591461045c57806337a66d85146104be57806338bbfa50146104c857806340c10f191461062457610158565b806301ffc9a71461015d57806306fdde03146101c2578063081812fc14610245578063095ea7b3146102b35780631249c58b1461030157806318160ddd1461030b575b600080fd5b6101a86004803603602081101561017357600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610c0c565b604051808215151515815260200191505060405180910390f35b6101ca610c74565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561020a5780820151818401526020810190506101ef565b50505050905090810190601f1680156102375780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102716004803603602081101561025b57600080fd5b8101908080359060200190929190505050610d16565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102ff600480360360408110156102c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d67565b005b610309610fa5565b005b610313610fa7565b6040518082815260200191505060405180910390f35b6103956004803603606081101561033f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fb4565b005b61045a600480360360408110156103ad57600080fd5b8101908080359060200190929190803590602001906401000000008111156103d457600080fd5b8201836020820111156103e657600080fd5b8035906020019184600183028401116401000000008311171561040857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610fd7565b005b6104a86004803603604081101561047257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061101a565b6040518082815260200191505060405180910390f35b6104c661108d565b005b610622600480360360608110156104de57600080fd5b81019080803590602001909291908035906020019064010000000081111561050557600080fd5b82018360208201111561051757600080fd5b8035906020019184600183028401116401000000008311171561053957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561059c57600080fd5b8201836020820111156105ae57600080fd5b803590602001918460018302840111640100000000831117156105d057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611136565b005b6106706004803603604081101561063a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061113b565b604051808215151515815260200191505060405180910390f35b6106f6600480360360608110156106a057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111e5565b005b6107246004803603602081101561070e57600080fd5b8101908080359060200190929190505050611205565b6040518082815260200191505060405180910390f35b6107666004803603602081101561075057600080fd5b8101908080359060200190929190505050611239565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107ea600480360360208110156107be57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611276565b6040518082815260200191505060405180910390f35b6108086112c6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108526112ef565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610892578082015181840152602081019050610877565b50505050905090810190601f1680156108bf5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61091b600480360360408110156108e357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611391565b005b610a206004803603608081101561093357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561099a57600080fd5b8201836020820111156109ac57600080fd5b803590602001918460018302840111640100000000831117156109ce57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506114cb565b005b610a4e60048036036020811015610a3857600080fd5b81019080803590602001909291905050506114f1565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a8e578082015181840152602081019050610a73565b50505050905090810190601f168015610abb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610ad16115b8565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b11578082015181840152602081019050610af6565b50505050905090810190601f168015610b3e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610bae60048036036040811015610b6257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061165a565b604051808215151515815260200191505060405180910390f35b610c0a60048036036020811015610bde57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116ee565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d0c5780601f10610ce157610100808354040283529160200191610d0c565b820191906000526020600020905b815481529060010190602001808311610cef57829003601f168201915b5050505050905090565b6000610d21826117d8565b15610d61576003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610d62565b5b919050565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180612a0e6029913960400191505060405180910390fd5b6000610e296112c6565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e6b5750610e6a813361165a565b5b610ec0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806129c86021913960400191505060405180910390fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff166002600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b565b6000600880549050905090565b610fbe338261184a565b610fc757600080fd5b610fd28383836118df565b505050565b611016828260006040519080825280601f01601f1916602001820160405280156110105781602001600182028038833980820191505090505b50611136565b5050565b600061102583611276565b821061103057600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061107a57fe5b9060005260206000200154905092915050565b336000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611133576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612a376028913960400191505060405180910390fd5b50565b505050565b60003373ffffffffffffffffffffffffffffffffffffffff1661115c6112c6565b73ffffffffffffffffffffffffffffffffffffffff16146111c8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526033815260200180612a5f6033913960400191505060405180910390fd5b6111d28383611903565b6111db82611924565b6001905092915050565b611200838383604051806020016040528060008152506114cb565b505050565b600061120f610fa7565b821061121a57600080fd5b6008828154811061122757fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006112bf600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611a7b565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113875780601f1061135c57610100808354040283529160200191611387565b820191906000526020600020905b81548152906001019060200180831161136a57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113ca57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6114d6848484610fb4565b6114e284848484611a89565b6114eb57600080fd5b50505050565b60606114fc826117d8565b61150557600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115ac5780601f10611581576101008083540402835291602001916115ac565b820191906000526020600020905b81548152906001019060200180831161158f57829003601f168201915b50505050509050919050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116505780601f1061162557610100808354040283529160200191611650565b820191906000526020600020905b81548152906001019060200180831161163357829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b336000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611794576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612a376028913960400191505060405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008061185683611239565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806118c557508373ffffffffffffffffffffffffffffffffffffffff166118ad84610d16565b73ffffffffffffffffffffffffffffffffffffffff16145b806118d657506118d5818561165a565b5b91505092915050565b6118ea838383611c72565b6118f48382611f25565b6118fe82826120c3565b505050565b61190d828261218a565b61191782826120c3565b611920816123a2565b5050565b61192d816117d8565b61199f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f546f6b656e20646f6573206e6f7420657869740000000000000000000000000081525060200191505060405180910390fd5b6060611a4d60118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a3a5780601f10611a0f57610100808354040283529160200191611a3a565b820191906000526020600020905b815481529060010190602001808311611a1d57829003601f168201915b5050505050611a48846123ee565b61251b565b905080601260008481526020019081526020016000209080519060200190611a769291906128f6565b505050565b600081600001549050919050565b6000611aaa8473ffffffffffffffffffffffffffffffffffffffff1661255f565b611ab75760019050611c6a565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611b92578082015181840152602081019050611b77565b50505050905090810190601f168015611bbf5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015611be157600080fd5b505af1158015611bf5573d6000803e3d6000fd5b505050506040513d6020811015611c0b57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611d29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612a926021913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611daf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806129e96025913960400191505060405180910390fd5b6003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055611e2c600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612572565b611e73600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612588565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611f7d6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506125ab90919063ffffffff16565b905060006007600084815260200190815260200160002054905081811461206a576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611fea57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061204257fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036120bc9190612976565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b612193816117d8565b15612206576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f546f6b656e20616c72656164792065786973742e00000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156122a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420616464726573732e0000000000000000000000000000000081525060200191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612342600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612572565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415612436576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612516565b600082905060005b60008214612460578080600101915050600a828161245857fe5b04915061243e565b6060816040519080825280601f01601f1916602001820160405280156124955781602001600182028038833980820191505090505b50905060006001830390505b6000861461250e57600a86816124b357fe5b0660300160f81b828280600190039350815181106124cd57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161250657fe5b0495506124a1565b819450505050505b919050565b60606125578383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612634565b905092915050565b600080823b905060008111915050919050565b6001816000016000828254019250508190555050565b6125a0600182600001546125ab90919063ffffffff16565b816000018190555050565b600082821115612623576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156126905781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612715578881815181106126bc57fe5b602001015160f81c60f81b8383806001019450815181106126d957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506126a7565b600090505b87518110156127885787818151811061272f57fe5b602001015160f81c60f81b83838060010194508151811061274c57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061271a565b600090505b86518110156127fb578681815181106127a257fe5b602001015160f81c60f81b8383806001019450815181106127bf57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061278d565b600090505b855181101561286e5785818151811061281557fe5b602001015160f81c60f81b83838060010194508151811061283257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612800565b600090505b84518110156128e15784818151811061288857fe5b602001015160f81c60f81b8383806001019450815181106128a557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612873565b82995050505050505050505095945050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061293757805160ff1916838001178555612965565b82800160010185558215612965579182015b82811115612964578251825591602001919060010190612949565b5b50905061297291906129a2565b5090565b81548183558181111561299d5781836000526020600020918201910161299c91906129a2565b5b505050565b6129c491905b808211156129c05760008160009055506001016129a8565b5090565b9056fe4d657373656e6765722073656e646572207761736e607420617070726f7665642e43616e6e6f74207472616e7366657220746f206120696e76616c696420616464726573732e4769766520616464726573732063616e6e6f7420626520746865206f776e657220616464726573732e5065726d697373696f6e2044656e6965642e204f6e6c79206f776e657220697320616c6c6f77656443616e6e6f742062652065786563757465642e206d73672e73656e646572206973206e6f74206f776e6572206164647265737346726f6d206973206e6f74206f776e6572206f6620676976656e20746f6b656e2ea165627a7a7230582055bb5f40f2937355d2714c02b1118613d65cd00a39cb06baebc860071fbe96100029",
  "sourceMap": "329:1241:3:-;;;22199:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;710:159:3;8:9:-1;5:2;;;30:1;27;20:12;5:2;710:159:3;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;710:159:3;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;710:159:3;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;710:159:3;;;;;;801:4;807:6;22318:4:0;22323:6;22330:12;20018:288;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;971:10;962:6;;:19;;;;;;;;;;;;;;;;;;996:21;;;;;;;;;;2108:5;2098:7;;:15;;;;;;;;;;;;;;;;;;2904:40;2501:10;2923:20;;2904:18;;;:40;;:::i;:::-;5050;4924:10;5069:20;;5050:18;;;:40;;:::i;:::-;12713:51;12319:10;12732:31;;12713:18;;;:51;;:::i;:::-;20172:4;20164:5;:12;;;;;;;;;;;;:::i;:::-;;20196:6;20186:7;:16;;;;;;;;;;;;:::i;:::-;;20228:12;20212:13;:28;;;;;;;;;;;;:::i;:::-;;20250:49;19829:10;20269:29;;20250:18;;;:49;;:::i;:::-;20018:288;;;22234:118;;850:15:3;828:10;;:38;;;;;;;;;;;;;;;;;;710:159;;;329:1241;;3254:158:0;3344:10;3329:25;;:11;:25;;;;;3321:34;;;;;;3401:4;3365:20;:33;3386:11;3365:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3254:158;:::o;329:1241:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "329:1241:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;329:1241:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3042:133:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3042:133:0;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;20398:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20398:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6346:205;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6346:205:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5639:701;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5639:701:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1538:29:3;;;:::i;:::-;;13478:94:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7528:180;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7528:180:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14801:122:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14801:122:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14801:122:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14801:122:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14801:122:2;;;;;;;;;;;;;;;:::i;:::-;;13144:182:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13144:182:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2002:58;;;:::i;:::-;;14929:166:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14929:166:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:2;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:2;;;;;;;;;;;;;;;:::i;:::-;;22358:258:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;22358:258:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7714:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7714:132:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13909:148;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13909:148:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5399:167;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5399:167:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5103:290;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5103:290:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;845:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;20485:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20485:85:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6843:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6843:213:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7852:211;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7852:211:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7852:211:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7852:211:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7852:211:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7852:211:0;;;;;;;;;;;;;;;:::i;:::-;;20679:151;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20679:151:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20679:151:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20576:97;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20576:97:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7377:145;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7377:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1203:246;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1203:246:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;3042:133;3112:4;3135:20;:33;3156:11;3135:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3128:40;;3042:133;;;:::o;20398:81::-;20436:13;20467:5;20460:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20398:81;:::o;6346:205::-;6405:7;6483:16;6491:7;6483;:16::i;:::-;6480:64;;;6520:15;:24;6536:7;6520:24;;;;;;;;;;;;;;;;;;;;;6513:31;;;;6480:64;6346:205;;;;:::o;5639:701::-;5807:11;:20;5819:7;5807:20;;;;;;;;;;;;;;;;;;;;;5801:26;;:2;:26;;;;5793:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5992:13;6008:16;:14;:16::i;:::-;5992:32;;6056:5;6042:19;;:10;:19;;;:57;;;;6065:34;6082:5;6088:10;6065:16;:34::i;:::-;6042:57;6034:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6231:2;6204:15;:24;6220:7;6204:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6324:7;6320:2;6289:43;;6298:11;:20;6310:7;6298:20;;;;;;;;;;;;;;;;;;;;;6289:43;;;;;;;;;;;;5639:701;;;:::o;1538:29:3:-;:::o;13478:94:0:-;13522:7;13548:10;:17;;;;13541:24;;13478:94;:::o;7528:180::-;7618:39;7637:10;7649:7;7618:18;:39::i;:::-;7610:48;;;;;;7669:32;7683:4;7689:2;7693:7;7669:13;:32::i;:::-;7528:180;;;:::o;14801:122:2:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:2;;;;14876:10;:40::i;:::-;14801:122;;:::o;13144:182:0:-;13224:7;13259:16;13269:5;13259:9;:16::i;:::-;13251:5;:24;13243:33;;;;;;13293:12;:19;13306:5;13293:19;;;;;;;;;;;;;;;13313:5;13293:26;;;;;;;;;;;;;;;;13286:33;;13144:182;;;;:::o;2002:58::-;2040:10;1094:6;;;;;;;;;;;1083:17;;:7;:17;;;1075:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2002:58;:::o;14929:166:2:-;;;;:::o;22358:258:0:-;22416:4;22459:10;22439:30;;:16;:14;:16::i;:::-;:30;;;22431:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22534:24;22546:2;22550:7;22534:11;:24::i;:::-;22568:20;22580:7;22568:11;:20::i;:::-;22605:4;22598:11;;22358:258;;;;:::o;7714:132::-;7800:39;7817:4;7823:2;7827:7;7800:39;;;;;;;;;;;;:16;:39::i;:::-;7714:132;;;:::o;13909:148::-;13967:7;14002:13;:11;:13::i;:::-;13994:5;:21;13986:30;;;;;;14033:10;14044:5;14033:17;;;;;;;;;;;;;;;;14026:24;;13909:148;;;:::o;5399:167::-;5454:7;5539:11;:20;5551:7;5539:20;;;;;;;;;;;;;;;;;;;;;5532:27;;5399:167;;;:::o;5103:290::-;5158:7;5352:34;:17;:24;5370:5;5352:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5345:41;;5103:290;;;:::o;845:78::-;885:7;910:6;;;;;;;;;;;903:13;;845:78;:::o;20485:85::-;20525:13;20556:7;20549:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20485:85;:::o;6843:213::-;6928:10;6922:16;;:2;:16;;;;6914:25;;;;;;6986:8;6949:18;:30;6968:10;6949:30;;;;;;;;;;;;;;;:34;6980:2;6949:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7036:2;7009:40;;7024:10;7009:40;;;7040:8;7009:40;;;;;;;;;;;;;;;;;;;;;;6843:213;;:::o;7852:211::-;7958:31;7971:4;7977:2;7981:7;7958:12;:31::i;:::-;8007:48;8030:4;8036:2;8040:7;8049:5;8007:22;:48::i;:::-;7999:57;;;;;;7852:211;;;;:::o;20679:151::-;20737:13;20770:16;20778:7;20770;:16::i;:::-;20762:25;;;;;;20804:10;:19;20815:7;20804:19;;;;;;;;;;;20797:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20679:151;;;:::o;20576:97::-;20622:13;20653;20646:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20576:97;:::o;7377:145::-;7457:4;7480:18;:25;7499:5;7480:25;;;;;;;;;;;;;;;:35;7506:8;7480:35;;;;;;;;;;;;;;;;;;;;;;;;;7473:42;;7377:145;;;;:::o;1203:246::-;1265:10;1094:6;;;;;;;;;;;1083:17;;:7;:17;;;1075:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1434:8;1425:6;;:17;;;;;;;;;;;;;;;;;;1203:246;;:::o;8257:152::-;8314:4;8330:13;8346:11;:20;8358:7;8346:20;;;;;;;;;;;;;;;;;;;;;8330:36;;8400:1;8383:19;;:5;:19;;;;8376:26;;;8257:152;;;:::o;8769:246::-;8854:4;8870:13;8886:16;8894:7;8886;:16::i;:::-;8870:32;;8931:5;8920:16;;:7;:16;;;:51;;;;8964:7;8940:31;;:20;8952:7;8940:11;:20::i;:::-;:31;;;8920:51;:87;;;;8975:32;8992:5;8999:7;8975:16;:32::i;:::-;8920:87;8912:96;;;8769:246;;;;:::o;14432:239::-;14517:38;14537:4;14543:2;14547:7;14517:19;:38::i;:::-;14566:47;14599:4;14605:7;14566:32;:47::i;:::-;14624:40;14652:2;14656:7;14624:27;:40::i;:::-;14432:239;;;:::o;14926:196::-;14989:24;15001:2;15005:7;14989:11;:24::i;:::-;15024:40;15052:2;15056:7;15024:27;:40::i;:::-;15075;15107:7;15075:31;:40::i;:::-;14926:196;;:::o;21312:223::-;21377:16;21385:7;21377;:16::i;:::-;21369:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21427:19;21449:42;21459:13;21449:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21473:17;21482:7;21473:8;:17::i;:::-;21449:9;:42::i;:::-;21427:64;;21523:5;21501:10;:19;21512:7;21501:19;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;21312:223;;:::o;1063:112:5:-;1128:7;1154;:14;;;1147:21;;1063:112;;;:::o;11164:347:0:-;11285:4;11310:15;:2;:13;;;:15::i;:::-;11305:58;;11348:4;11341:11;;;;11305:58;11373:13;11405:2;11389:36;;;11426:10;11438:4;11444:7;11453:5;11389:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11389:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11389:70:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11389:70:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11389:70:0;;;;;;;;;;;;;;;;11373:86;;4057:10;11487:16;;11477:26;;;:6;:26;;;;11469:35;;;11164:347;;;;;;;:::o;9884:752::-;10061:11;:20;10073:7;10061:20;;;;;;;;;;;;;;;;;;;;;10053:28;;:4;:28;;;10045:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10224:1;10210:16;;:2;:16;;;;10202:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10321:15;:24;10337:7;10321:24;;;;;;;;;;;;10314:31;;;;;;;;;;;10434:33;:17;:21;10452:2;10434:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10477:35;:17;:23;10495:4;10477:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10545:2;10522:11;:20;10534:7;10522:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10621:7;10617:2;10603:26;;10612:4;10603:26;;;;;;;;;;;;9884:752;;;:::o;16898:1128::-;17160:22;17185:32;17215:1;17185:12;:18;17198:4;17185:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;17160:57;;17227:18;17248:17;:26;17266:7;17248:26;;;;;;;;;;;;17227:47;;17392:14;17378:10;:28;17374:323;;17422:19;17444:12;:18;17457:4;17444:18;;;;;;;;;;;;;;;17463:14;17444:34;;;;;;;;;;;;;;;;17422:56;;17526:11;17493:12;:18;17506:4;17493:18;;;;;;;;;;;;;;;17512:10;17493:30;;;;;;;;;;;;;;;:44;;;;17642:10;17609:17;:30;17627:11;17609:30;;;;;;;;;;;:43;;;;17374:323;;17783:12;:18;17796:4;17783:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;16898:1128;;;;:::o;15744:183::-;15857:12;:16;15870:2;15857:16;;;;;;;;;;;;;;;:23;;;;15828:17;:26;15846:7;15828:26;;;;;;;;;;;:52;;;;15890:12;:16;15903:2;15890:16;;;;;;;;;;;;;;;15912:7;15890:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;15890:30:0;;;;;;;;;;;;;;;;;;;;;;15744:183;;:::o;9172:513::-;9333:16;9341:7;9333;:16::i;:::-;9332:17;9324:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9406:1;9392:16;;:2;:16;;;;9384:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9545:2;9522:11;:20;9534:7;9522:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9557:33;:17;:21;9575:2;9557:21;;;;;;;;;;;;;;;:31;:33::i;:::-;9670:7;9666:2;9646:32;;9663:1;9646:32;;;;;;;;;;;;9172:513;;:::o;16122:161::-;16225:10;:17;;;;16198:15;:24;16214:7;16198:24;;;;;;;;;;;:44;;;;16252:10;16268:7;16252:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16252:24:0;;;;;;;;;;;;;;;;;;;;;;16122:161;:::o;43271:465:2:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;43456:66;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:2;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;43601:100;;43664:2;43659;:7;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;542:413:8:-;602:4;805:12;914:7;902:20;894:28;;947:1;940:4;:8;933:15;;;542:413;;;:::o;1181:89:5:-;1262:1;1244:7;:14;;;:19;;;;;;;;;;;1181:89;:::o;1276:108::-;1356:21;1375:1;1356:7;:14;;;:18;;:21;;;;:::i;:::-;1339:7;:14;;:38;;;;1276:108;:::o;1274:179:6:-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o;40282:1020:2:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:2;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;329:1241:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.4.21 <0.6.0;\n\nimport './ERC721Mintable.sol';\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\nimport './../../zokrates/code/square/verifier.sol';\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\n\ncontract SolnSquareVerifier is CustomToken {\n\nVerifier zkVerifier;\n\n// TODO define a solutions struct that can hold an index & an address\nstruct Solutions{\n    uint256 index;\n    address addr;\n}\n\n// TODO define an array of the above struct\nSolutions[] solutions_list;\n\n// TODO define a mapping to store unique solutions submitted\nmapping(bytes32 => Solutions) submittedSolutions;\n\nconstructor(address verifierAddress, string memory name, string memory symbol) CustomToken(name, symbol) public\n{\n    zkVerifier = Verifier(verifierAddress);\n}\n\n// TODO Create an event to emit when a solution is added\nevent AddedSolution(uint256 index, address addr);\n\n\n// TODO Create a function to add the solutions to the array and emit the event\nfunction AddSolution(Solutions storage solution) internal {\n    solutions_list.push(solution);\n    bytes32 key = keccak256(abi.encodePacked(solution.index,solution.addr));\n    submittedSolutions[key] = solution;\n    emit AddedSolution(solution.index,solution.addr);\n}\n\n\n// TODO Create a function to mint new NFT only after the solution has been verified\n//  - make sure the solution is unique (has not been used before)\n//  - make sure you handle metadata as well as tokenSuplly\nfunction mint() external {\n\n}\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "sourcePath": "/home/alano/Development/Repository/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/home/alano/Development/Repository/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7527
      ]
    },
    "id": 7528,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7441,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "absolutePath": "/home/alano/Development/Repository/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7442,
        "nodeType": "ImportDirective",
        "scope": 7528,
        "sourceUnit": 1115,
        "src": "34:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alano/Development/Repository/Blockchain-Capstone/zokrates/code/square/verifier.sol",
        "file": "./../../zokrates/code/square/verifier.sol",
        "id": 7443,
        "nodeType": "ImportDirective",
        "scope": 7528,
        "sourceUnit": 10086,
        "src": "173:51:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7444,
              "name": "CustomToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1114,
              "src": "360:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomToken_$1114",
                "typeString": "contract CustomToken"
              }
            },
            "id": 7445,
            "nodeType": "InheritanceSpecifier",
            "src": "360:11:3"
          }
        ],
        "contractDependencies": [
          109,
          58,
          1114,
          948,
          1062,
          650,
          155,
          7439
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7527,
        "linearizedBaseContracts": [
          7527,
          1114,
          1062,
          7439,
          948,
          650,
          155,
          109,
          58
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7447,
            "name": "zkVerifier",
            "nodeType": "VariableDeclaration",
            "scope": 7527,
            "src": "375:19:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$10085",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7446,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10085,
              "src": "375:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10085",
                "typeString": "contract Verifier"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solutions",
            "id": 7452,
            "members": [
              {
                "constant": false,
                "id": 7449,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7452,
                "src": "489:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7448,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "489:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7451,
                "name": "addr",
                "nodeType": "VariableDeclaration",
                "scope": 7452,
                "src": "508:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7450,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "508:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solutions",
            "nodeType": "StructDefinition",
            "scope": 7527,
            "src": "467:56:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7455,
            "name": "solutions_list",
            "nodeType": "VariableDeclaration",
            "scope": 7527,
            "src": "569:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solutions_$7452_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solutions[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7453,
                "name": "Solutions",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7452,
                "src": "569:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solutions_$7452_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solutions"
                }
              },
              "id": 7454,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "569:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solutions_$7452_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solutions[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7459,
            "name": "submittedSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7527,
            "src": "659:48:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solutions_$7452_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solutions)"
            },
            "typeName": {
              "id": 7458,
              "keyType": {
                "id": 7456,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "667:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "659:29:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solutions_$7452_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solutions)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7457,
                "name": "Solutions",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7452,
                "src": "678:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solutions_$7452_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solutions"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7478,
              "nodeType": "Block",
              "src": "822:47:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7472,
                      "name": "zkVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7447,
                      "src": "828:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$10085",
                        "typeString": "contract Verifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7474,
                          "name": "verifierAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7461,
                          "src": "850:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7473,
                        "name": "Verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10085,
                        "src": "841:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Verifier_$10085_$",
                          "typeString": "type(contract Verifier)"
                        }
                      },
                      "id": 7475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "841:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$10085",
                        "typeString": "contract Verifier"
                      }
                    },
                    "src": "828:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Verifier_$10085",
                      "typeString": "contract Verifier"
                    }
                  },
                  "id": 7477,
                  "nodeType": "ExpressionStatement",
                  "src": "828:38:3"
                }
              ]
            },
            "documentation": null,
            "id": 7479,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7468,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7463,
                    "src": "801:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7469,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7465,
                    "src": "807:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 7470,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7467,
                  "name": "CustomToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1114,
                  "src": "789:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CustomToken_$1114_$",
                    "typeString": "type(contract CustomToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "789:25:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7461,
                  "name": "verifierAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7479,
                  "src": "722:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "722:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7463,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 7479,
                  "src": "747:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7462,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "747:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7465,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 7479,
                  "src": "767:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7464,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "767:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "721:67:3"
            },
            "returnParameters": {
              "id": 7471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "822:0:3"
            },
            "scope": 7527,
            "src": "710:159:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7485,
            "name": "AddedSolution",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7481,
                  "indexed": false,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7485,
                  "src": "948:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7480,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "948:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7483,
                  "indexed": false,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7485,
                  "src": "963:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7482,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "963:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "947:29:3"
            },
            "src": "928:49:3"
          },
          {
            "body": {
              "id": 7521,
              "nodeType": "Block",
              "src": "1117:209:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7493,
                        "name": "solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7487,
                        "src": "1143:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solutions_$7452_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solutions storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solutions_$7452_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solutions storage pointer"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7490,
                        "name": "solutions_list",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7455,
                        "src": "1123:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solutions_$7452_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solutions storage ref[] storage ref"
                        }
                      },
                      "id": 7492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1123:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solutions_$7452_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solutions storage ref) returns (uint256)"
                      }
                    },
                    "id": 7494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1123:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7495,
                  "nodeType": "ExpressionStatement",
                  "src": "1123:29:3"
                },
                {
                  "assignments": [
                    7497
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7497,
                      "name": "key",
                      "nodeType": "VariableDeclaration",
                      "scope": 7521,
                      "src": "1158:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7496,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1158:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7507,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7501,
                              "name": "solution",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7487,
                              "src": "1199:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Solutions_$7452_storage_ptr",
                                "typeString": "struct SolnSquareVerifier.Solutions storage pointer"
                              }
                            },
                            "id": 7502,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "index",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7449,
                            "src": "1199:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7503,
                              "name": "solution",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7487,
                              "src": "1214:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Solutions_$7452_storage_ptr",
                                "typeString": "struct SolnSquareVerifier.Solutions storage pointer"
                              }
                            },
                            "id": 7504,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7451,
                            "src": "1214:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7499,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10304,
                            "src": "1182:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1182:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1182:46:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7498,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10311,
                      "src": "1172:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1172:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1158:71:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7508,
                        "name": "submittedSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7459,
                        "src": "1235:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solutions_$7452_storage_$",
                          "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solutions storage ref)"
                        }
                      },
                      "id": 7510,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7509,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7497,
                        "src": "1254:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1235:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solutions_$7452_storage",
                        "typeString": "struct SolnSquareVerifier.Solutions storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7511,
                      "name": "solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7487,
                      "src": "1261:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solutions_$7452_storage_ptr",
                        "typeString": "struct SolnSquareVerifier.Solutions storage pointer"
                      }
                    },
                    "src": "1235:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solutions_$7452_storage",
                      "typeString": "struct SolnSquareVerifier.Solutions storage ref"
                    }
                  },
                  "id": 7513,
                  "nodeType": "ExpressionStatement",
                  "src": "1235:34:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7515,
                          "name": "solution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7487,
                          "src": "1294:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solutions_$7452_storage_ptr",
                            "typeString": "struct SolnSquareVerifier.Solutions storage pointer"
                          }
                        },
                        "id": 7516,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "index",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7449,
                        "src": "1294:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7517,
                          "name": "solution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7487,
                          "src": "1309:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solutions_$7452_storage_ptr",
                            "typeString": "struct SolnSquareVerifier.Solutions storage pointer"
                          }
                        },
                        "id": 7518,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7451,
                        "src": "1309:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7514,
                      "name": "AddedSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7485,
                      "src": "1280:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1280:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7520,
                  "nodeType": "EmitStatement",
                  "src": "1275:48:3"
                }
              ]
            },
            "documentation": null,
            "id": 7522,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "AddSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7487,
                  "name": "solution",
                  "nodeType": "VariableDeclaration",
                  "scope": 7522,
                  "src": "1080:26:3",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Solutions_$7452_storage_ptr",
                    "typeString": "struct SolnSquareVerifier.Solutions"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7486,
                    "name": "Solutions",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 7452,
                    "src": "1080:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solutions_$7452_storage_ptr",
                      "typeString": "struct SolnSquareVerifier.Solutions"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1079:28:3"
            },
            "returnParameters": {
              "id": 7489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1117:0:3"
            },
            "scope": 7527,
            "src": "1059:267:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7525,
              "nodeType": "Block",
              "src": "1563:4:3",
              "statements": []
            },
            "documentation": null,
            "id": 7526,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1551:2:3"
            },
            "returnParameters": {
              "id": 7524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1563:0:3"
            },
            "scope": 7527,
            "src": "1538:29:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 7528,
        "src": "329:1241:3"
      }
    ],
    "src": "0:1597:3"
  },
  "legacyAST": {
    "absolutePath": "/home/alano/Development/Repository/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7527
      ]
    },
    "id": 7528,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7441,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "absolutePath": "/home/alano/Development/Repository/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7442,
        "nodeType": "ImportDirective",
        "scope": 7528,
        "sourceUnit": 1115,
        "src": "34:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alano/Development/Repository/Blockchain-Capstone/zokrates/code/square/verifier.sol",
        "file": "./../../zokrates/code/square/verifier.sol",
        "id": 7443,
        "nodeType": "ImportDirective",
        "scope": 7528,
        "sourceUnit": 10086,
        "src": "173:51:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7444,
              "name": "CustomToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1114,
              "src": "360:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomToken_$1114",
                "typeString": "contract CustomToken"
              }
            },
            "id": 7445,
            "nodeType": "InheritanceSpecifier",
            "src": "360:11:3"
          }
        ],
        "contractDependencies": [
          109,
          58,
          1114,
          948,
          1062,
          650,
          155,
          7439
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7527,
        "linearizedBaseContracts": [
          7527,
          1114,
          1062,
          7439,
          948,
          650,
          155,
          109,
          58
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7447,
            "name": "zkVerifier",
            "nodeType": "VariableDeclaration",
            "scope": 7527,
            "src": "375:19:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$10085",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7446,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10085,
              "src": "375:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10085",
                "typeString": "contract Verifier"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solutions",
            "id": 7452,
            "members": [
              {
                "constant": false,
                "id": 7449,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7452,
                "src": "489:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7448,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "489:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7451,
                "name": "addr",
                "nodeType": "VariableDeclaration",
                "scope": 7452,
                "src": "508:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7450,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "508:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solutions",
            "nodeType": "StructDefinition",
            "scope": 7527,
            "src": "467:56:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7455,
            "name": "solutions_list",
            "nodeType": "VariableDeclaration",
            "scope": 7527,
            "src": "569:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solutions_$7452_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solutions[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7453,
                "name": "Solutions",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7452,
                "src": "569:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solutions_$7452_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solutions"
                }
              },
              "id": 7454,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "569:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solutions_$7452_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solutions[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7459,
            "name": "submittedSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7527,
            "src": "659:48:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solutions_$7452_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solutions)"
            },
            "typeName": {
              "id": 7458,
              "keyType": {
                "id": 7456,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "667:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "659:29:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solutions_$7452_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solutions)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7457,
                "name": "Solutions",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7452,
                "src": "678:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solutions_$7452_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solutions"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7478,
              "nodeType": "Block",
              "src": "822:47:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7472,
                      "name": "zkVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7447,
                      "src": "828:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$10085",
                        "typeString": "contract Verifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7474,
                          "name": "verifierAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7461,
                          "src": "850:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7473,
                        "name": "Verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10085,
                        "src": "841:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Verifier_$10085_$",
                          "typeString": "type(contract Verifier)"
                        }
                      },
                      "id": 7475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "841:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$10085",
                        "typeString": "contract Verifier"
                      }
                    },
                    "src": "828:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Verifier_$10085",
                      "typeString": "contract Verifier"
                    }
                  },
                  "id": 7477,
                  "nodeType": "ExpressionStatement",
                  "src": "828:38:3"
                }
              ]
            },
            "documentation": null,
            "id": 7479,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7468,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7463,
                    "src": "801:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7469,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7465,
                    "src": "807:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 7470,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7467,
                  "name": "CustomToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1114,
                  "src": "789:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CustomToken_$1114_$",
                    "typeString": "type(contract CustomToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "789:25:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7461,
                  "name": "verifierAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7479,
                  "src": "722:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "722:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7463,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 7479,
                  "src": "747:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7462,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "747:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7465,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 7479,
                  "src": "767:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7464,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "767:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "721:67:3"
            },
            "returnParameters": {
              "id": 7471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "822:0:3"
            },
            "scope": 7527,
            "src": "710:159:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7485,
            "name": "AddedSolution",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7481,
                  "indexed": false,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7485,
                  "src": "948:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7480,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "948:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7483,
                  "indexed": false,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7485,
                  "src": "963:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7482,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "963:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "947:29:3"
            },
            "src": "928:49:3"
          },
          {
            "body": {
              "id": 7521,
              "nodeType": "Block",
              "src": "1117:209:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7493,
                        "name": "solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7487,
                        "src": "1143:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solutions_$7452_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solutions storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solutions_$7452_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solutions storage pointer"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7490,
                        "name": "solutions_list",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7455,
                        "src": "1123:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solutions_$7452_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solutions storage ref[] storage ref"
                        }
                      },
                      "id": 7492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1123:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solutions_$7452_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solutions storage ref) returns (uint256)"
                      }
                    },
                    "id": 7494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1123:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7495,
                  "nodeType": "ExpressionStatement",
                  "src": "1123:29:3"
                },
                {
                  "assignments": [
                    7497
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7497,
                      "name": "key",
                      "nodeType": "VariableDeclaration",
                      "scope": 7521,
                      "src": "1158:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7496,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1158:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7507,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7501,
                              "name": "solution",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7487,
                              "src": "1199:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Solutions_$7452_storage_ptr",
                                "typeString": "struct SolnSquareVerifier.Solutions storage pointer"
                              }
                            },
                            "id": 7502,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "index",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7449,
                            "src": "1199:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7503,
                              "name": "solution",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7487,
                              "src": "1214:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Solutions_$7452_storage_ptr",
                                "typeString": "struct SolnSquareVerifier.Solutions storage pointer"
                              }
                            },
                            "id": 7504,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7451,
                            "src": "1214:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7499,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10304,
                            "src": "1182:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1182:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1182:46:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7498,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10311,
                      "src": "1172:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1172:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1158:71:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7508,
                        "name": "submittedSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7459,
                        "src": "1235:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solutions_$7452_storage_$",
                          "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solutions storage ref)"
                        }
                      },
                      "id": 7510,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7509,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7497,
                        "src": "1254:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1235:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solutions_$7452_storage",
                        "typeString": "struct SolnSquareVerifier.Solutions storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7511,
                      "name": "solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7487,
                      "src": "1261:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solutions_$7452_storage_ptr",
                        "typeString": "struct SolnSquareVerifier.Solutions storage pointer"
                      }
                    },
                    "src": "1235:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solutions_$7452_storage",
                      "typeString": "struct SolnSquareVerifier.Solutions storage ref"
                    }
                  },
                  "id": 7513,
                  "nodeType": "ExpressionStatement",
                  "src": "1235:34:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7515,
                          "name": "solution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7487,
                          "src": "1294:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solutions_$7452_storage_ptr",
                            "typeString": "struct SolnSquareVerifier.Solutions storage pointer"
                          }
                        },
                        "id": 7516,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "index",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7449,
                        "src": "1294:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7517,
                          "name": "solution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7487,
                          "src": "1309:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solutions_$7452_storage_ptr",
                            "typeString": "struct SolnSquareVerifier.Solutions storage pointer"
                          }
                        },
                        "id": 7518,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7451,
                        "src": "1309:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7514,
                      "name": "AddedSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7485,
                      "src": "1280:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1280:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7520,
                  "nodeType": "EmitStatement",
                  "src": "1275:48:3"
                }
              ]
            },
            "documentation": null,
            "id": 7522,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "AddSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7487,
                  "name": "solution",
                  "nodeType": "VariableDeclaration",
                  "scope": 7522,
                  "src": "1080:26:3",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Solutions_$7452_storage_ptr",
                    "typeString": "struct SolnSquareVerifier.Solutions"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7486,
                    "name": "Solutions",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 7452,
                    "src": "1080:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solutions_$7452_storage_ptr",
                      "typeString": "struct SolnSquareVerifier.Solutions"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1079:28:3"
            },
            "returnParameters": {
              "id": 7489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1117:0:3"
            },
            "scope": 7527,
            "src": "1059:267:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7525,
              "nodeType": "Block",
              "src": "1563:4:3",
              "statements": []
            },
            "documentation": null,
            "id": 7526,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1551:2:3"
            },
            "returnParameters": {
              "id": 7524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1563:0:3"
            },
            "scope": 7527,
            "src": "1538:29:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 7528,
        "src": "329:1241:3"
      }
    ],
    "src": "0:1597:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-09-21T19:06:02.911Z",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}