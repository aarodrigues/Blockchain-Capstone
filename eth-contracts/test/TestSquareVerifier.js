// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var SquareVerifier = artifacts.require('Verifier');
var JsonProof = require('../../zokrates/code/square/proof.json');
const truffleAssert = require('truffle-assertions');

contract('TestSquareVerifier', accounts => {
    // Test verification with correct proof
    // - use the contents from proof.json generated from zokrates steps

    describe('Verify Zokrate proof', function () {
        beforeEach(async function () { 
            this.contract = await SquareVerifier.new({from: accounts[0]});
        })

        it('Test verification with correct proof', async function () { 
            let result = false;
            let tx = await this.contract.verifyTx(
                JsonProof.proof["a"],
                JsonProof.proof["b"],
                JsonProof.proof["c"], 
                JsonProof.input
            );

            truffleAssert.eventEmitted(tx, 'Verified', (ev) => {
                result = true;
            });
            assert.equal(result, true, "Correct inputs should result in verification"); 
        });

        // it('Test verification with incorrect proof', async function () { 
            
        // });

    });

})

    
// Test verification with incorrect proof
