// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var SquareVerifier = artifacts.require('Verifier');
var JsonProof = require('../../zokrates/code/square/proof.json');

contract('TestSquareVerifier', accounts => {
    // Test verification with correct proof
    // - use the contents from proof.json generated from zokrates steps

    describe('Verify Zokrate proof', function () {
        beforeEach(async function () { 
            this.contract = await SquareVerifier.new({from: accounts[0]});
        })

        it('Test verification with correct proof', async function () { 
            
            // let tx = await this.contract.verifyTx(
            //         JsonProof.proof["A"],
            //         JsonProof.proof["A_p"],
            //         JsonProof.proof["B"],
            //         JsonProof.proof["B_p"], 
            //         JsonProof.proof["C"], 
            //         JsonProof.proof["C_p"],
            //         JsonProof.proof["H"], 
            //         JsonProof.proof["K"], 
            //         JsonProof.input
            //     );

            let tx = await this.contract.verifyTx(
                JsonProof.proof["a"],
                JsonProof.proof["b"],
                JsonProof.proof["c"], 
                JsonProof.input
            );

            truffleAssert.eventEmitted(tx, 'Verified', (ev) => {
                return expect(ev.s).to.deep.equal("Transaction successfully verified.");
            });

        });

        it('Test verification with incorrect proof', async function () { 
            
        });

    });

})

    
// Test verification with incorrect proof
